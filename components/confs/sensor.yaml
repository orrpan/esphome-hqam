sensor:
  - platform: template
    id: batteryLevelSensor
    name: "Battery level"
    unit_of_measurement: mAh
    lambda: |-
      esphome::mower::Automower *mower = (esphome::mower::Automower *) id(mower_id);
      return {mower->get_battery_level_sensor()->state};

  - platform: template
    id: chargingTimeSensor
    name: "Charging time"
    unit_of_measurement: min
    lambda: |-
      esphome::mower::Automower *mower = (esphome::mower::Automower *) id(mower_id);
      return {mower->get_charging_time_sensor()->state};

  - platform: template
    id: batteryUsedSensor
    name: "Battery used"
    unit_of_measurement: mAh
    lambda: |-
      esphome::mower::Automower *mower = (esphome::mower::Automower *) id(mower_id);
      return {mower->get_battery_used_sensor()->state};

  - platform: template
    id: batteryVoltageSensor
    name: "Battery voltage"
    unit_of_measurement: V
    lambda: |-
      esphome::mower::Automower *mower = (esphome::mower::Automower *) id(mower_id);
      return {mower->get_battery_voltage_sensor()->state};

  - platform: template
    id: batteryTemperatureSensor
    name: "Battery temperature"
    unit_of_measurement: "Â°C"
    lambda: |-
      esphome::mower::Automower *mower = (esphome::mower::Automower *) id(mower_id);
      return {mower->get_battery_temperature_sensor()->state};

  - platform: template
    id: bladeMotorSpeedSensor
    name: "Blade Motor Speed"
    unit_of_measurement: RPM
    lambda: |-
      esphome::mower::Automower *mower = (esphome::mower::Automower *) id(mower_id);
      return {mower->get_blade_motor_speed_sensor()->state};

  - platform: template
    id: firmwareVersionSensor
    name: "Firmware version"
    lambda: |-
      esphome::mower::Automower *mower = (esphome::mower::Automower *) id(mower_id);
      return {mower->get_firmware_version_sensor()->state};
